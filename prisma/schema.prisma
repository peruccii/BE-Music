// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  senha         String
  saldo         Int             @default(0)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  music_curtida MusicCurtida[]  @relation("user")
  MusicFavorita MusicFavorita[] @relation("user")
  Playlists     PlaylistUser[]  @relation("user")
  TenisCurtida  TenisCurtida[]  @relation("user")
  TenisFavorito TenisFavorito[] @relation("user")

  @@map("users")
}

model Playlist {
  id                  String          @id @default(uuid())
  title               String          @unique
  photo               String
  isPublic            Boolean
  musicas             PlaylistUser[]  @relation("playlist")
  musicas_adicionadas musicPlaylist[] @relation("playlist")
}

model Music {
  id             String          @id @default(uuid())
  title          String          @unique
  photo          String
  cantor         String
  url_music      String
  realease_date  DateTime
  music_curtida  MusicCurtida[]  @relation("music")
  music_favorita MusicFavorita[] @relation("music")
  musicPlaylist  musicPlaylist[] @relation("music")

  @@map("musics")
}

model PlaylistUser {
  user       User     @relation("user", fields: [userId], references: [id])
  userId     String
  playlist   Playlist @relation("playlist", fields: [playlistId], references: [id])
  playlistId String

  @@id([userId, playlistId])
  @@map("playlist_user")
}

model musicPlaylist {
  playlist   Playlist @relation("playlist", fields: [playlistId], references: [id])
  playlistId String
  music      Music    @relation("music", fields: [musicId], references: [id])
  musicId    String

  @@id([musicId, playlistId])
  @@map("music_playlist")
}

model MusicCurtida {
  user    User   @relation("user", fields: [userId], references: [id])
  userId  String
  music   Music  @relation("music", fields: [musicId], references: [id])
  musicId String

  @@id([userId, musicId])
  @@map("music_curtida")
}

model MusicFavorita {
  user    User   @relation("user", fields: [userId], references: [id])
  userId  String
  music   Music  @relation("music", fields: [musicId], references: [id])
  musicId String

  @@id([userId, musicId])
  @@map("music_favorita")
}

model Sneaker {
  id            String          @id @default(uuid())
  name          String          @unique
  photo         String
  description   String
  number        Int
  new_sneaker   Boolean
  price         Float
  fast_sell     Boolean
  created_at    DateTime        @default(now())
  TenisCurtida  TenisCurtida[]  @relation("tenis")
  TenisFavorito TenisFavorito[] @relation("tenis")
  Marca         TenisBrand[]    @relation("tenis")
  TenisCarrinho TenisCarrinho[] @relation("tenis")
  TenisSize     TenisSize[]     @relation("tenis")

  @@map("sneaker")
}

model Brand {
  id         String       @id @default(uuid())
  name       String       @unique
  photo      String
  TenisBrand TenisBrand[] @relation("marca")

  @@map("marcas")
}

model TenisBrand {
  tenis   Sneaker @relation("tenis", fields: [tenisId], references: [id])
  tenisId String
  marca   Brand   @relation("marca", fields: [marcaId], references: [id])
  marcaId String

  @@id([tenisId, marcaId])
  @@map("tenis_marca")
}

model Size {
  id        String      @id @default(uuid())
  sizes     String
  TenisSize TenisSize[] @relation("sizes")

  @@map("sizes")
}

model TenisSize {
  tenis   Sneaker @relation("tenis", fields: [tenisId], references: [id])
  tenisId String
  sizes   Size    @relation("sizes", fields: [sizeId], references: [id])
  sizeId  String

  @@id([tenisId, sizeId])
  @@map("tenis_size")
}

model TenisCurtida {
  user    User    @relation("user", fields: [userId], references: [id])
  userId  String
  tenis   Sneaker @relation("tenis", fields: [tenisId], references: [id])
  tenisId String

  @@id([userId, tenisId])
  @@map("tenis_curtida")
}

model TenisFavorito {
  user    User    @relation("user", fields: [userId], references: [id])
  userId  String
  tenis   Sneaker @relation("tenis", fields: [tenisId], references: [id])
  tenisId String

  @@id([userId, tenisId])
  @@map("tenis_favorito")
}

model Carrinho {
  id            String          @id @default(uuid())
  nome          String          @unique
  TenisCarrinho TenisCarrinho[] @relation("carrinho")
}

model TenisCarrinho {
  tenis      Sneaker  @relation("tenis", fields: [tenisId], references: [id])
  tenisId    String
  carrinho   Carrinho @relation("carrinho", fields: [carrinhoId], references: [id])
  carrinhoId String

  @@id([tenisId, carrinhoId])
  @@map("tenis_carrinho")
}
